name: Prefect Recursive Register
author: Aldwyn Cabarrubias
description: Enable the auto-registration of Prefect flows recursively. Limited to Kubernetes (EKS) run config and Docker (ECR) storage for now.
branding:
  icon: cloud-lightning
  color: blue

inputs:
  project-name:
    description: Prefect project name
    required: true
  docker-storage-kwargs:
    description: Docker storage kwargs in YAML dictionary format. Refer https://docs.prefect.io/api/latest/storage.html#docker
    required: true
  flows-directory:
    description: The directory of the Python scripts that have Flow contexts. Default is "."
    required: true
    default: "."
  # k8s-job-template-path:
  #   description: Kubernetes Job template path
  #   required: false
  # enable-dask-executor:
  #   description: Whether to enable DaskExecutor
  #   required: false
  #   default: "false"

runs:
  using: composite
  steps:
    - name: Parse docker-storage-kwargs YAML
      id: parse-docker-storage-kwargs
      uses: mikefarah/yq@master
      with:
        cmd: echo '${{ inputs.docker-storage-kwargs }}' | yq -o=json eval '.' -

    - name: Dockerize and register Prefect flows
      shell: bash
      run: |
        kwargs_compressed=$(echo '${{ steps.parse-docker-storage-kwargs.outputs.result }}' | jq -c)
        base_image=$(echo '${{ steps.parse-docker-storage-kwargs.outputs.result }}' | jq -r '.base_image')
        docker_workdir=$(docker image inspect $base_image | jq -r '.[].Config.WorkingDir')
        flows_dir=${docker_workdir%%*(/)}/${{ inputs.flows-directory }}

        docker run --rm \
          -v "${{ github.action_path }}/docker_deploy.py:${docker_workdir%%*(/)}/docker_deploy.py" \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v /home/runner/.docker/:/root/.docker/ \
          -e PREFECT__CLOUD__API_KEY=$PREFECT__CLOUD__API_KEY \
          -e PREFECT__CLOUD__USE_LOCAL_SECRETS=$PREFECT__CLOUD__USE_LOCAL_SECRETS \
          $base_image python docker_deploy.py \
            --schedule \
            --project ${{ inputs.project-name }} \
            --path $flows_dir \
            --docker-storage-kwargs "$kwargs_compressed"
