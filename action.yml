name: Prefect Recursive Register
author: Aldwyn Cabarrubias
description: Enable the auto-registration of Prefect flows recursively. Limited to Kubernetes (EKS) run config and Docker (ECR) storage for now.
branding:
  icon: cloud-lightning
  color: blue

inputs:
  project-name:
    description: Prefect project name
    required: true
  create-project:
    description: Whether to create project if it does not exist
    default: "false"
    required: true
  project-description:
    description: A description of the project to be used when creating it
    required: false
  base-docker-image:
    description: The base Docker image of Prefect to be used. Can be a local or remote Docker image.
    required: true
  docker-registry-url:
    description: Docker registry URL
    required: true
  flows-directory:
    description: The directory of the Python scripts that have Flow contexts. Default is "."
    required: true
    default: "."
  # k8s-job-template-path:
  #   description: Kubernetes Job template path
  #   required: false
  # enable-dask-executor:
  #   description: Whether to enable DaskExecutor
  #   required: false
  #   default: "false"

runs:
  using: composite
  steps:
    - name: Dockerize and register Prefect flows
      shell: bash
      run: |
        # docker_workdir=$(docker image inspect ${{ inputs.base-docker-image }} | jq -r '.[].Config.WorkingDir')
        # flows_dir=${docker_workdir%%*(/)}/${{ inputs.flows-directory }}
        is_create_project=$([[ "${{ inputs.create-project }}" == "true" ]] && echo --create-project || echo)

        docker run --rm \
          -v "${{ github.action_path }}/docker_deploy.py:${docker_workdir%%*(/)}/docker_deploy.py" \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v /home/runner/.docker/:/root/.docker/ \
          -e PREFECT__CLOUD__API_KEY=$PREFECT__CLOUD__API_KEY \
          -e PREFECT__CLOUD__USE_LOCAL_SECRETS=false \
          ${{ inputs.base-docker-image }} python docker_deploy.py \
            $is_create_project \
            --schedule \
            --project ${{ inputs.project-name }} \
            --path ${{ inputs.flows-directory }} \
            --docker-registry-url ${{ inputs.docker-registry-url }}
